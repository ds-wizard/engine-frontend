name: Style Builder CI

on:
  push:
  pull_request:

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.1.0]

    steps:
      - uses: actions/checkout@v3

      # (1) -> Preparations
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      # (2) -> Install and initialize
      - name: Install
        run: |
          npm install
          cd wizard-style-builder
          npm install
          npm run init

      # (3) -> Run tests
      - name: Test
        run: |
          cd wizard-style-builder
          npm run test

  btp:
    name: Build-Tag-Push
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.1.0]

    env:
      PUBLIC_IMAGE_PREFIX: datastewardshipwizard
      IMAGE_NAME: wizard-style-builder
      PRIVATE_IMAGE: ${{ secrets.PRIVATE_REGISTRY_URL }}/wizard-style-builder
      DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
      DOCKER_META_CONTEXT: 'wizard-style-builder'
      DOCKER_META_FILE: './wizard-style-builder/docker/Dockerfile'
      DOCKER_META_PLATFORMS: 'linux/amd64'

    steps:
      - uses: actions/checkout@v3

      # (1) -> Preparations
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      # (2) -> Install dependencies
      - name: Install
        run: |
          npm ci
          cd wizard-style-builder
          npm ci

      # (3) -> Build app and Docker image
      - name: Build
        run: |
          cd wizard-style-builder
          npm run init

      # (4.1) -> Docker build (test)
      - name: Docker meta [test]
        id: meta-test
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ env.PUBLIC_IMAGE_PREFIX }}/${{ env.IMAGE_NAME }}
          tags: |
            type=sha

      - name: Docker build [test]
        uses: docker/build-push-action@v4
        with:
          context: ${{ env.DOCKER_META_CONTEXT }}
          file: ${{ env.DOCKER_META_FILE }}
          platforms: ${{ env.DOCKER_META_PLATFORMS }}
          push: false
          tags: ${{ steps.meta-test.outputs.tags }}
          labels: ${{ steps.meta-test.outputs.labels }}

      # (4.2) -> Docker login
      - name: Docker login [docker.io]
        if: github.event_name != 'pull_request' && env.DOCKER_HUB_USERNAME != ''
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      # (4.3) -> Docker build+push (dev)
      - name: Docker meta [dev]
        id: meta-dev
        if: github.event_name != 'pull_request' && env.DOCKER_HUB_USERNAME != ''
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch

      - name: Docker build+push [dev]
        uses: docker/build-push-action@v4
        if: github.event_name != 'pull_request' && steps.meta-dev.outputs.tags != '' && env.DOCKER_HUB_USERNAME != ''
        with:
          context: ${{ env.DOCKER_META_CONTEXT }}
          file: ${{ env.DOCKER_META_FILE }}
          platforms: ${{ env.DOCKER_META_PLATFORMS }}
          push: true
          tags: ${{ steps.meta-dev.outputs.tags }}
          labels: ${{ steps.meta-dev.outputs.labels }}

      # (4.4) -> Docker build+push (public)
      - name: Docker meta [public]
        id: meta-public
        if: github.event_name != 'pull_request' && env.DOCKER_HUB_USERNAME != ''
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ env.PUBLIC_IMAGE_PREFIX }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'main') }}
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}},enable=${{ !startsWith(github.ref, 'refs/tags/v0.') }}

      - name: Docker build+push [public]
        uses: docker/build-push-action@v4
        if: github.event_name != 'pull_request' && steps.meta-public.outputs.tags != '' && env.DOCKER_HUB_USERNAME != ''
        with:
          context: ${{ env.DOCKER_META_CONTEXT }}
          file: ${{ env.DOCKER_META_FILE }}
          platforms: ${{ env.DOCKER_META_PLATFORMS }}
          push: true
          tags: ${{ steps.meta-public.outputs.tags }}
          labels: ${{ steps.meta-public.outputs.labels }}
